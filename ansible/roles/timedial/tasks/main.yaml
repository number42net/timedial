- name: "Fix permissions" # Fix permissions after testing with rsync
  ansible.builtin.file:
    path: "/opt/timedial"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"
  tags: ["redeploy"]

- name: Check if any users are logged in
  ansible.builtin.command: /usr/bin/docker exec timedial-timedial who
  register: active_users
  changed_when: false
  tags: ["never", "redeploy"]

- name: Check if git repo is dirty
  ansible.builtin.command: git status --porcelain
  args:
    chdir: /opt/timedial
  register: git_status
  changed_when: false
  tags: ["never", "redeploy"]

- name: Reset repo if dirty
  ansible.builtin.shell: "git reset --hard && git clean -f"
  args:
    chdir: /opt/timedial
  when: git_status.stdout != ""
  register: git_reset
  tags: ["never", "redeploy"]

- name: "Clone repo"
  git:
    repo: "https://github.com/number42net/timedial.git"
    dest: "/opt/timedial"
  register: gitrepo
  tags: ["never", "redeploy"]
  
- name: "Log directory"
  ansible.builtin.file:
    path: "/opt/timedial/logs"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"

- name: "Create wtmp log file"
  ansible.builtin.shell: "touch /opt/timedial/logs/wtmp"
  args:
    creates: /opt/timedial/logs/wtmp

- name: "SSH key directory"
  ansible.builtin.file:
    path: "/opt/timedial/keys"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0500"

- name: "SSH host-key directory"
  ansible.builtin.file:
    path: "/opt/timedial/keys/host-keys"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0500"

- name: "SSH host-key directory"
  ansible.builtin.file:
    path: "/opt/timedial/keys/private-keys"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0500"

- name: "Copy SSH host keys"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/opt/timedial/host-keys"
    owner: root
    group: root
    mode: '0400'
  loop:
    - keys/host-keys/ssh_host_ecdsa_key
    - keys/host-keys/ssh_host_ecdsa_key.pub
    - keys/host-keys/ssh_host_ed25519_key
    - keys/host-keys/ssh_host_ed25519_key.pub
    - keys/host-keys/ssh_host_rsa_key
    - keys/host-keys/ssh_host_rsa_key.pub

- name: "Copy private keys"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/opt/timedial/private-keys"
    owner: root
    group: root
    mode: '0400'
  loop:
    - keys/private-keys/sidecars-backup.key

- name: Rebuild images
  ansible.builtin.shell: COMPOSE_PROFILES=production docker compose build
  args:
    chdir: /opt/timedial
  when: gitrepo.changed
  tags: ["never", "redeploy"]

- name: Recreating containers
  ansible.builtin.shell: COMPOSE_PROFILES=production docker compose up --detach
  args:
    chdir: /opt/timedial
  when: gitrepo.changed and active_users.stdout == ""
  tags: ["never", "redeploy"]

- name: Check if the container is already running
  ansible.builtin.shell: docker compose ls | grep timedial | grep running
  register: container_status
  failed_when: false
  changed_when: false

- name: Start container
  ansible.builtin.shell: COMPOSE_PROFILES=production /usr/bin/docker compose up -d
  args:
    chdir: /opt/timedial
  when: container_status.rc != 0

- name: Schedule weekly website cron
  ansible.builtin.cron:
    name: "Weekly website restart"
    minute: "5"
    hour: "5"
    weekday: "1"
    job: "/usr/bin/docker restart timedial-website"
    user: root
